pipeline {
        agent any
	 
	 def dockerImage
	 def dockerImageName = "spring-boot-java"
     def dockerImageTag = "${dockerImageName}:${env.BUILD_NUMBER}"
     stages { 
	 stage('Clone Repo') {
	 
	 git 'https://github.com/sarathkgit/gs-spring-boot-docker.git'
	 
	 }
	 
     
          stage("Compile") {
               steps {
                    sh "./mvnw compile"
               }
          }
          stage("Unit test") {
               steps {
                    sh "./mvnw test"
               }
          }
     
    
stage("Package") {
     steps {
          sh "./mvnw package"
     }
}

stage('Publish Tests Results'){
      parallel(
        publishJunitTestsResultsToJenkins: {
          echo "Publish junit Tests Results"
		  junit '**/target/surefire-reports/TEST-*.xml'
		  archive 'target/*.jar'
        },
        publishJunitTestsResultsToSonar: {
          echo "This is branch b"
      })
    }
	
 stage('Build Docker Image') {
      // build docker image
      
	  sh "whoami"
      sh "ls -all /var/run/docker.sock"
      sh "mv ./target/gs*.jar ./data" 
      
      dockerImage = docker.build("spring-boot-java")
    }
stage("Docker Run") {     
	steps {
          sh "docker run -d -p 8030:8080 -t ${dockerImageName}"
	  }
}
stage("Docker push") {
	steps {
   sh "docker login -u $DOCKER_USER -p $DOCKER_PASSWORD"
   sh "docker tag ${dockerImageName} $DOCKER_USER/${dockerImageTag}"
   sh "docker push $DOCKER_USER/${dockerImageTag}"
     }
}

  }   
}
